{"version":3,"file":"vue.js","sources":["../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["\n// 对模板进行编译处理\nexport function compileToFunction(template) {\n  console.log(template);\n\n  // 1 将template 转换成ast 语法树\n\n  // 2 生成render 方法（render 方法执行后的返回的结果就是虚拟dom）\n\n  \n}","// 我们希望重写数组中的部分方法\n\nlet oldArrayProto = Array.prototype // 获取数组的原型\n \n// 通过 newArrayProto.__proto__ = oldArrayProto\nexport let newArrayProto = Object.create(oldArrayProto) // 生成新的(不是拷贝， 是复制)\n\nlet methods = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'reverse',\n  'sort',\n  'splice'\n]\n\nmethods.forEach(method => {\n  newArrayProto[method] = function(...args) { // 这里重写了数组的方法\n    const result = oldArrayProto[method].call(this, ...args) // 内部调用原来的方法， 函数的劫持， 切片编程\n    console.log('method', method);\n    // 但是对数组进行追加额外的对象数据需要再次进行劫持\n    let inserted;\n    let ob = this.__ob__;\n    switch (method) {\n      // 需要对新增的数据再次进行劫持\n      case 'push':\n      case 'unshift':\n        inserted = args\n        break;\n      case 'splice': \n        // arr.splice(0, 1, {a: 1}, {b: 2})\n        // args 是个数组，只截取新增的数据即可\n        inserted = args.slice(2)\n        break\n      default:\n        break;\n    }\n    console.log(inserted);\n    // 对新增的内容再次进行观测 inserted 是个数组哦\n    // 是不是想调用observeArray(data) 就可以了， 但是访问不到🐶。。。, 只能通过额外挂载参数的方法\n    if (inserted) {\n      // 这里的this 不就是外部的data吗，因为外部是data调用的啊，\n      // 所以只能在外部的class Observer 中给data加上一个属性这里就能访问到observeArray(）了\n      // console.log(this);\n      ob.observeArray(inserted)\n    }\n    return result\n  }\n})\n","import { newArrayProto } from \"./array\";\n\nexport function observe(data) {\n  // 劫持数据\n  console.log(data);\n\n  // 只对对象进行劫持\n  if (typeof data !== 'object' || data === null) return\n\n  // 说明这个对象被代理过了\n  if (data.__ob__ instanceof Observer) {\n    return data.__ob__;\n  } \n  // 如果一个对象被劫持过了， 那就不需要劫持了（要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过）\n  return new Observer(data)\n  \n}\nclass Observer {\n  constructor(data) {\n    // object.definerProperty 只能劫持已经存在的数据，新增的和删除的并不能感知。\n    // vue2 里面会为此单独设置$set $delete\n    // data.__ob__ = this // 给数据加了一个标识，如果数据上有__ob__则说明这个属性被观测过\n    // (但是直接放在这里会栈内存溢出，因为下面还有walk函数循环， 下面有个observe递归)\n    // 所以将__ob__ 转换成不可枚举\n    Object.defineProperty(data, '__ob__', {\n      value: this,\n      enumerable: false // 将__ob__转换为不可枚举（循环的时候无法获取）\n    })\n\n    // 但是针对data中的数组数据每一项都添加get(), set() 性能太差了， 且不能监听到数组的push, pop 等方法\n    if (Array.isArray(data)) {\n      // 所以在这里我们重写数组中的方法 七个变异方法是可以修改数组本身的\n      data.__proto__ = newArrayProto\n      this.observeArray(data) // 如果数组中放的是对象的时候\n    } else {\n      this.walk(data)\n    }\n  }\n\n  walk(data) {\n    // 循环对象 对属性依次劫持\n    // 重写定义属性 性能差\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\n  }\n\n  observeArray(data) { // 观测数组中的对象数据\n    data.forEach(item => observe(item))\n  }\n}\n\nexport function defineReactive(target, key, value) { // 闭包 属性劫持\n  observe(value)  // 递归， 比如data中的属性还是一个对象的场景\n  Object.defineProperty(target, key, {\n    get() {\n      // 取值的时候会执行get\n      return value\n    },\n    set(newVal) {\n      // 修改的时候会执行\n      if (newVal === value) return\n      value = newVal\n    }\n  })\n}\n","import { observe } from \"./observe/index\"\n\nexport function initState(vm) {\n  // 获取所有选项\n  const opts = vm.$options\n\n  if (opts.data) {\n    initData(vm)\n  }\n\n}\n\nfunction initData(vm) {\n  let data = vm.$options.data // data可能是函数或者对象\n\n  data = typeof data === 'function' ? data.call(vm) : data\n\n  // 下面的方法进行了属性 劫持但是在vm实例上并不会有data 属性直接访问 就是不能直接像项目里面 this.** 访问数据， 所以额外定义一个参数\n  vm._data = data // 这样又不便于直接的操作， 所以额外设置一层 _data的代理\n  // 对数据进行劫持 vue2中采用的是一个Objec.defineProperty\n  observe(data)\n\n  // 将vm._data 用vm来代理\n  Object.keys(data).forEach(key => proxy(vm, '_data', key))\n}\n\nexport function proxy(vm, target, key) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[target][key]\n    },\n    set(newVal) {\n      vm[target][key] = newVal\n    }\n  })\n}\n","import { compileToFunction } from \"./compiler/index\";\nimport { initState } from \"./state\";\n\nexport function initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    console.log(this); // 这里的this都是实例\n    // vm.$options就是获取用户的配置选项\n    const vm = this\n    vm.$options = options // 将用户的选项挂载到实例上\n    // 初始化状态\n    initState(vm)\n\n    // 实现数据挂载\n    if (options.el) {\n      vm.$mount(options.el)\n    }\n  }\n\n  Vue.prototype.$mount = function (el) {\n    const vm = this\n    // 当前的挂载元素\n    el = document.querySelector(el)\n    let ops = vm.$options\n    if (!ops.render) { // 先看有没有写render\n      let template;\n      if (!ops.template && el) { // 没有写模板 但是写了el\n        template = el.outerHTML\n      } else {\n        if (el) {\n          template = ops.template // 如果有el 则采用模板的内容\n        }\n      }\n\n      // console.log(template);\n      // 写了template 就用写了的template\n      if (template) {\n        // 这里需要对模板进行编译\n        const render = compileToFunction(template);\n\n        ops.render = render // jsx 最终会被编译成h('xxx')\n      }\n    }\n\n    ops.render // 最终可以获取render 方法\n\n    // script 标签引用的vue.global.js 这个编译过程是在浏览器进行的\n    // runtime 是不包含编译的， 整个编译是打包的时候通过loader来转义.vue 文件的\n    // 用runtime的时候不能在new Vue配置中使用template\n  }\n}\n\n","import { initMixin } from \"./init\"\n\nfunction Vue(option) {\n  this._init(option)\n}\n\ninitMixin(Vue)\n\nexport default Vue"],"names":[],"mappings":"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"}