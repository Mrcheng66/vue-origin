{"version":3,"file":"vue.js","sources":["../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/lifecycle.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/utils.js","../src/init.js","../src/globalApi.js","../src/index.js"],"sourcesContent":["let id = 0\nclass Dep {\n  // 属性的dep要收集watcher\n  constructor() {\n    this.id = id++; // 属性dep要收集watcher\n    this.subs = []; // 这里存放这当前属性对应的watcher 有哪些\n  }\n  depend() {\n    // this.subs.push(Dep.target) // 这里我们不希望放重复的watcher，而且方才只是一个单向的关系\n    //（因为可能在模板中多次使用同一属性， 没有必要多次收集watcher）\n    // dep -> watcher (watcher 记录dep)\n    \n    Dep.target.addDep(this) // Dep.target 这个是watcher 哦, 就是让watcher记住dep了\n    \n    // dep 和 watcher 是一个多对多的关系（一个属性可以在多个组件中使用 dep -》 多个watcher）\n    // 一个组件中由多个属性组成（一个watcher -》 对应多个dep）\n  }\n\n  addSub(watcher) {\n    this.subs.push(watcher)\n  }\n\n  notify() {\n    this.subs.forEach(wathcer => {\n      wathcer.update()\n    })\n  }\n}\n\nDep.target = null\n\nlet stack = []\nexport function pushTarget(watcher) {\n  stack.push(watcher)\n  Dep.target = watcher\n}\n\nexport function popTarget() {\n  stack.pop()\n  Dep.target = stack[stack.length - 1]\n}\n\nexport default Dep\n","import Dep, { popTarget, pushTarget } from \"./dep\";\n\n// 1 当我们创建渲染watcher的时候 我们会把当前的渲染watcher 放到Dep.target 上\n// 2 调用_render() 会取值 走到get上\n\n\n// 每个属性都有一个dep（属性就是被观察者）， watcher就是观察者（属性变化了会通知观察者来更新） -》 观察者模式\nlet id = 0;\nclass Watcher {\n  constructor(vm, callback, options) {\n    this.id = id++\n    this.vm = vm\n    this.renderWatcher = options\n    this.getter = callback // geter 意味着调用这个函数可以触发取值操作\n    this.deps = [] // 让watcher记住dep也是为了组件卸载和计算属性的实现\n    this.depsId = new Set()\n    \n    this.lazy = options.lazy\n    this.dirty = this.lazy // 缓存值\n    this.lazy ? undefined : this.get()\n  }\n  // 判断dirty重新执行\n  evaluate() {\n    this.value = this.get() // 获取用户函数的返回值，并且还要标记为脏\n    this.dirty = false\n  }\n  get() {\n    // Dep.target = this // 静态属性就是只有一份\n    pushTarget(this)\n    let value = this.getter.call(this.vm) // 会去vm上取值\n    // Dep.target = null // 渲染完毕就清空（清空是为了保证只有在模板里面才收集，在vm上获取属性是不收集的）\n    popTarget(this)\n    return value\n  }\n  depend() {\n    let i = this.deps.length\n    while (i--) {\n      this.deps[i].depend() // 让计算属性watcher 也收集渲染watcher\n    }\n  }\n\n  addDep(dep) {\n    let id = dep.id\n    if(!this.depsId.has(id)) {\n      this.deps.push(dep)\n      this.depsId.add(id)\n      dep.addSub(this); // watcher记住了dep了而且去重了, 此时dep 也记住watcher了\n    }\n  }\n\n  update() {\n    if (this.lazy) {\n      // 如果是计算属性 依赖的值变化了 就标记计算属性是脏值了\n      this.dirty = true  \n    } else {\n      // this.get() // 重新渲染更新 （不能直接同步更新，多次set值会重复渲染）\n      queueWatcher(this)\n    }\n  }\n\n  run() {\n    console.log('update');\n    this.get()\n  }\n}\n\nlet queue = []\nlet has = {}\nlet pending = false; // 防抖\n\nfunction flushSchedulerQueue() {\n  let fulshQueue = queue.slice(0)\n  queue = []\n  has = {}\n  pending = false\n  fulshQueue.forEach(q => \n    q.run()\n  )\n}\n\nfunction queueWatcher(watcher) {\n  const id = watcher.id\n  if (!has[id]) {\n    queue.push(watcher)\n    has[id] = true\n    // 不管update 执行多少次，只执行一轮刷新操作\n\n    if (!pending) {\n      // setTimeout(flushSchedulerQueue, 0) // 不能直接写异步的宏任务，因为异步更新的时候获取不到真实dom数据\n      nextTick(flushSchedulerQueue, 0)\n      pending = true\n    }\n  }\n}\n\n// nextTick没有直接使用某个api  而是采用优雅降级的方式\n// 内部先采用的是Promise （ie不兼容）， 在看MutationObserver ， \n// 还不支持可以考虑 ie专属的 setImmediate 最后 setTimeOut\nlet callbacks = []\nlet waiting = false\nexport function nextTick(cb) { // 先执行内部还是先用户的？\n  callbacks.push(cb) // 维护nextTick中的callback方法\n  if (!waiting) {\n    // setTimeout(() => {\n    //   flushCallBacks() // 最后一起刷新\n    // }, 0)\n    timerFunc()\n    waiting = true\n  }\n}\nlet timerFunc;\nif (Promise) {\n  timerFunc = () => {\n    Promise.resolve().then(flushCallBacks)\n  }\n} else if (MutationObserver) {\n  let observer = new MutationObserver(flushCallBacks)\n  let textNode = document.createTextNode(1);\n  observer.observe(textNode, {\n    characterData: true\n  })\n  timerFunc = () => {\n    textNode.textContent = 2\n  }\n} else if (setImmediate) {\n  timerFunc = () => {\n    setImmediate(flushCallBacks)\n  }\n} else {\n  timerFunc = () => {\n    setTimeout(flushCallBacks)\n  }\n}\nfunction flushCallBacks() {\n  let cbs = callbacks.slice(0)\n  callbacks = []\n  waiting = false\n  cbs.forEach(cb => cb())\n}\n\n// 需要给每个属性增加一个dep  目的就是收集watcher\n//  一个组件中 有多个属性 n个属性对应一个视图  n个dep对应一个watcher\n// 1个属性对应多个组件(在多个组件引用)  1个dep对应多个watcher\n// 多对多的关系\n\nexport default Watcher\n","// h() _c\nexport function createElementVNode(vm, tag, data, ...children) {\n  if (data == null) {\n    data = {}\n  }\n  // console.log(vm, arg, '----');\n  let key = data.key\n  if (key) {\n    delete data.key\n  }\n  return vnode(vm, tag, key, data, children)\n}\n\n// _v()\nexport function createTextVNode(vm, text) {\n  return vnode(vm, undefined, undefined, undefined, undefined, text)\n}\n\n// 和ast一样？ ast做的是语法层面的转化， 他描述的是语法本身（可以描述js， css， html）\n// 我们的虚拟dom 是描述dom元素的， 可以增加一些自定义属性（描述dom的）\nfunction vnode(vm, tag, key, data, children, text) {\n  return {\n    vm, tag, key, data, children, text\n  }\n}\n","import Watcher from \"./observe/watcher\";\nimport { createElementVNode, createTextVNode } from \"./vdom/index\"\n\nfunction createElm(vnode) {\n  let { tag, data, children, text } = vnode\n  if (typeof tag == 'string') { // 标签\n    vnode.el = document.createElement(tag) // 这里将真实的节点和虚拟节点对应起来, 后续如果修改了属性\n    // 处理属性\n    patchProps(vnode.el, data)\n    // 递归添加子节点dom\n    children.forEach(child => {\n      vnode.el.appendChild(createElm(child))\n    });\n  } else { // 文本节点\n    vnode.el = document.createTextNode(text)\n  }\n  return vnode.el\n}\n\nfunction patchProps(el, props) {\n  for (const key in props) {\n    if (key == 'style') {\n      for (const styleName in props.style) {\n        el.style[styleName] = props.style[styleName]\n      }\n    } else {\n      el.setAttribute(key, props[key])\n    }\n  }\n}\n\nexport function patch(oldVnode, vnode) {\n  const isRealElement = oldVnode.nodeType\n  if (isRealElement) {\n    // 如果是真实dom (初渲染)\n    const elm = oldVnode\n\n    const parenElm = elm.parentNode; // 拿到父元素\n\n    const newElm = createElm(vnode)\n    // console.log(newElm)\n    /* \n      先插入新节点 el，再删除老的 el 是为了避免在插入新节点之前，\n      一些 DOM 元素被脚本等异步操作修改，导致渲染不准确的问题。\n\n      如果先删除老的 el 再插入新的 el，那么在这个过程中，如果出现了异步操作，\n      可能会对老的 el 进行修改，导致渲染不准确。而如果先插入新的 el，再删除老的 el，\n      就能保证新的 el 能够正常渲染，避免了这个问题。\n      同时，Vue 在插入新的 el 时，也会保证它处于合适的位置，避免了插入位置的错误\n    */\n    parenElm.insertBefore(newElm, elm.nextSibling) // 先插入新的 el\n    parenElm.removeChild(elm) // 删除老的 el\n\n    return newElm\n  } else {\n    // diff算法\n  }\n  console.log(vnode)\n}\n\nexport function initLifeCycle(Vue) {\n  Vue.prototype._update = function (vnode) {\n    // 将虚拟dom转化为真实dom\n\n    // patch 既有初始化的功能  又有更新的功能\n    const vm = this\n    const el = vm.$el\n\n    vm.$el = patch(el, vnode)\n    // console.log('update', vnode)\n  }\n\n  Vue.prototype._c = function () {\n    return createElementVNode(this, ...arguments)\n  }\n\n  Vue.prototype._v = function () {\n    return createTextVNode(this, ...arguments)\n  }\n\n  Vue.prototype._s = function (value) {\n    if (typeof value !== 'object') return value\n    return JSON.stringify(value)\n  }\n\n  Vue.prototype._render = function () {\n    // console.log(vm.name)\n    // 当渲染的时候会去实例中取值，我们就可以将属性和视图绑定在一起\n    return this.$options.render.call(this) // 通过ast语法转义\n  }\n}\n// Vue的核心流程 1) 创造了响应式数据 2) 模板转换成ast语法树 3) 将ast语法树转换成render函数 \n// 4) 后续每次数据更新可以只执行render 函数(无需再次执行ast转换的过程)\n\n// render 函数会产生虚拟节点(使用响应式数据)\n// 根据生成的虚拟节点生成真实DOM\nexport function mountComponent(vm, el) {\n  // console.log(vm)\n  vm.$el = el\n\n  // 1、调用render方法产生虚拟节点, 虚拟DOM\n  // vm._update(vm._render()) // vm._render()其实就是执行的 vm.render()\n  const updateComponent = () => {\n    vm._update(vm._render())\n  }\n  // 2、根据虚拟DOM产生真实DOM\n\n  // 3、插入到el元素中\n\n  // 依赖收集监听\n  // const watchers = new Watcher(vm, updateComponent, true /* isRenderWatcher */)\n  // console.log(watchers);\n  new Watcher(vm, updateComponent, true /* isRenderWatcher */)\n}\n\nexport function callHook(vm, hook) { // 调用钩子函数\n  const handlers = vm.$options[hook];\n  if(handlers) {\n    handlers.forEach(handler => {\n      handler.call(vm)\n    })\n  }\n}\n","\n// Regular Expressions for parsing tags and attributes\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 他匹配到的分组是一个标签名 <xxx 匹配到的是开始 标签的名字\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)  // 匹配的是</xxx> 最终匹配到的分组就是结束标签的名字\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/  // 匹配属性\n// 属性的第一个分组就是属性的key value 就是分组3/分组4/分组5\nconst startTagClose = /^\\s*(\\/?)>/ // <div> <br/> 自闭合标签等\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // 匹配到的内容就是我们表达式的变量\nconst dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+?\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\nconst doctype = /^<!DOCTYPE [^>]+>/i\n// #7298: escape - to avoid being passed as HTML comment when inlined in page\nconst comment = /^<!\\--/\nconst conditionalComment = /^<!\\[/\n\nexport function parseHTML(html) { // html 最开始肯定是一个<  \n  // 每次解析完一个 标签/属性 等就删除掉\n  function advance(length) {\n    html = html.substring(length)\n  }\n\n  const ELEMENT_TYPE = 1\n  const TEXT_TYPE = 3\n  const stack = [] // 用于存放元素栈\n  let currentParent // 指向栈中的最后一个\n  let root\n\n  // 最终需要转换成一颗抽象语法树\n  function createASTElement(tag, attrs) {\n    return {\n      tag,\n      attrs,\n      type: ELEMENT_TYPE,\n      children: [],\n      parent: null\n    }\n  }\n\n  function start(tag, attrs) {\n    let node = createASTElement(tag, attrs) // 创建一个ast节点\n    if (!root) { // 看一下是否是空树\n      root = node // 如果是空树则当前是树的根节点\n    }\n\n    if (currentParent) {\n      node.parent = currentParent // 赋予了parent 属性\n      currentParent.children.push(node) // 当前节点children增加\n    }\n    stack.push(node)\n    currentParent = node // currentParent 是栈中的最后一个\n  }\n\n  function charts(text) {\n    // console.log(text); // 文本直接放在当前指向的节点中\n    text = text.replace(/\\s/g, '')\n    text && currentParent.children.push({\n    // currentParent.children.push({\n      type: TEXT_TYPE,\n      text,\n      parent: currentParent\n    })\n  }\n\n  function end(tags) {\n    // console.log(tags); // 遇到结束标签必然是stack中最后一个元素（即当前元素）的结束\n    stack.pop()\n    currentParent = stack[stack.length - 1]\n  }\n\n  function parsetStartTag() {\n    const start = html.match(startTagOpen)\n\n    // console.log(start);\n    if (start) {\n      const match = {\n        tagName: start[1], // 标签名\n        attrs: []\n      }\n      advance(start[0].length)\n      // 如果不是开始标签的结束就一直匹配下去\n      let attr, end;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length)\n        match.attrs.push({name: attr[1], value: attr[3] || attr[4] || attr[5] || true})\n      }\n\n      if (end) {\n        advance(end[0].length)\n      }\n      // console.log(match);\n      return match\n    }\n    return false\n  }\n\n  while (html) {\n    // 如果textEnd 为0 说明是一个开始标签或者结束标签\n    // 如果textEnd > 0 说明是文本的结束位置\n    let textEnd = html.indexOf('<'); // 如果indexOf中的索引是0 则说明是个标签\n\n    if (textEnd == 0) {\n      const startTagMatch = parsetStartTag();\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs)\n        continue;\n      }\n      // 匹配结束标签\n      let endTagMatch = html.match(endTag)\n      if (endTagMatch) {\n        end(endTagMatch[1])\n        advance(endTagMatch[0].length)\n        continue;\n      }\n    }\n    // 文本\n    if (textEnd > 0) {\n      let text = html.substring(0, textEnd); // 文本内容\n      if (text) {\n        charts(text)\n        advance(text.length)\n      }\n    }\n  }\n  // console.log(root);\n\n  return root\n}\n","import { parseHTML } from \"./parse\";\n\nfunction genProps(attrs) {\n    let str = ''// {name,value}\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i];\n        if (attr.name === 'style') {\n            // color:red;background:red => {color:'red'}\n            let obj = {};\n            attr.value.split(';').forEach(item => { // qs 库\n                let [key, value] = item.split(':');\n                obj[key] = value;\n            });\n            attr.value = obj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},` // a:b,c:d,\n    }\n    return `{${str.slice(0, -1)}}`\n}\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\nfunction gen(node) {\n    if (node.type === 1) {\n        return codegen(node);\n    } else {\n        // 文本\n        let text = node.text\n        if (!defaultTagRE.test(text)) {\n            return `_v(${JSON.stringify(text)})`\n        } else {\n            //_v( _s(name)+'hello' + _s(name))\n            let tokens = [];\n            let match;\n            defaultTagRE.lastIndex = 0;\n            let lastIndex = 0;\n            // split\n            while (match = defaultTagRE.exec(text)) {\n                let index = match.index; // 匹配的位置  {{name}} hello  {{name}} hello \n                if (index > lastIndex) {\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n                }\n                tokens.push(`_s(${match[1].trim()})`)\n                lastIndex = index + match[0].length\n            }\n            if (lastIndex < text.length) {\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\n            }\n            return `_v(${tokens.join('+')})`\n        }\n    }\n}\nfunction genChildren(children) {\n    return children.map(child => gen(child)).join(',')\n}\nfunction codegen(ast) {\n    let children = genChildren(ast.children);\n    let code = (`_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\n        }${ast.children.length ? `,${children}` : ''\n        })`)\n\n    return code;\n}\nexport function compileToFunction(template) {\n\n    // 1.就是将template 转化成ast语法树\n    let ast = parseHTML(template);\n\n    // 2.生成render方法 (render方法执行后的返回的结果就是 虚拟DOM)\n\n    // 模板引擎的实现原理 就是 with  + new Function\n\n    let code = codegen(ast);\n    code = `with(this){return ${code}}`;\n    let render = new Function(code); // 根据代码生成render函数\n\n    //  _c('div',{id:'app'},_c('div',{style:{color:'red'}},  _v(_s(vm.name)+'hello'),_c('span',undefined,  _v(_s(age))))\n\n    return render;\n}\n\n\n// <xxx\n// <namepsace:xxx\n// color   =   \"asdsada\"     c= 'asdasd'  d=  asdasdsa","// 我们希望重写数组中的部分方法\n\nlet oldArrayProto = Array.prototype // 获取数组的原型\n \n// 通过 newArrayProto.__proto__ = oldArrayProto\nexport let newArrayProto = Object.create(oldArrayProto) // 生成新的(不是拷贝， 是复制)\n\nlet methods = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'reverse',\n  'sort',\n  'splice'\n]\n\nmethods.forEach(method => {\n  newArrayProto[method] = function(...args) { // 这里重写了数组的方法\n    const result = oldArrayProto[method].call(this, ...args) // 内部调用原来的方法， 函数的劫持， 切片编程\n    console.log('method', method);\n    // 但是对数组进行追加额外的对象数据需要再次进行劫持\n    let inserted;\n    let ob = this.__ob__;\n    switch (method) {\n      // 需要对新增的数据再次进行劫持\n      case 'push':\n      case 'unshift':\n        inserted = args\n        break;\n      case 'splice': \n        // arr.splice(0, 1, {a: 1}, {b: 2})\n        // args 是个数组，只截取新增的数据即可\n        inserted = args.slice(2)\n        break\n      default:\n        break;\n    }\n    console.log(inserted);\n    // 对新增的内容再次进行观测 inserted 是个数组哦\n    // 是不是想调用observeArray(data) 就可以了， 但是访问不到🐶。。。, 只能通过额外挂载参数的方法\n    if (inserted) {\n      // 这里的this 不就是外部的data吗，因为外部是data调用的 \n      // 所以只能在外部的class Observer 中给data加上一个属性这里就能访问到observeArray(）了\n      // console.log(this);\n      ob.observeArray(inserted)\n    }\n\n    ob.dep.notify() // 数组变化了  通知对应的watcher实现更新逻辑\n    return result\n  }\n})\n","import { newArrayProto } from \"./array\";\nimport Dep from \"./dep\";\n\nexport function observe(data) {\n  // 劫持数据\n  // console.log(data);\n\n  // 只对对象进行劫持\n  if (typeof data !== 'object' || data === null) return\n\n  // 说明这个对象被代理过了\n  if (data.__ob__ instanceof Observer) {\n    return data.__ob__;\n  } \n  // 如果一个对象被劫持过了， 那就不需要劫持了（要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过）\n  return new Observer(data)\n  \n}\nclass Observer {\n  constructor(data) {\n    // 给每个对象都新增收集功能\n    this.dep = new Dep()\n\n    // object.definerProperty 只能劫持已经存在的数据，新增的和删除的并不能感知。\n    // vue2 里面会为此单独设置$set $delete\n    // data.__ob__ = this // 给数据加了一个标识，如果数据上有__ob__则说明这个属性被观测过\n    // (但是直接放在这里会栈内存溢出，因为下面还有walk函数循环， 下面有个observe递归)\n    // 所以将__ob__ 转换成不可枚举\n    Object.defineProperty(data, '__ob__', {\n      value: this,\n      enumerable: false // 将__ob__转换为不可枚举（循环的时候无法获取）\n    })\n\n    // 但是针对data中的数组数据每一项都添加get(), set() 性能太差了， 且不能监听到数组的push, pop 等方法\n    if (Array.isArray(data)) {\n      // 所以在这里我们重写数组中的方法 七个变异方法是可以修改数组本身的\n      data.__proto__ = newArrayProto\n      this.observeArray(data) // 如果数组中放的是对象的时候\n    } else {\n      this.walk(data)\n    }\n  }\n\n  walk(data) {\n    // 循环对象 对属性依次劫持\n    // 重写定义属性 性能差\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\n  }\n\n  observeArray(data) { // 观测数组中的对象数据\n    data.forEach(item => observe(item))\n  }\n}\n\n// 深层次嵌套会递归，递归多了性能就差，不存在属性监听不到，存在的属性要重写方法\nfunction dependArray(value) {\n  for (let i = 0; i < value.length; i++) {\n    const current = value[i];\n    current.__ob__ &&  current.__ob__.dep.depend() // \n    if (Array.isArray(current)) {\n      dependArray(current )\n    }\n  }\n}\n\nexport function defineReactive(target, key, value) { // 闭包 属性劫持\n  const childOb = observe(value)  // 递归， 比如data中的属性还是一个对象的场景,   childOb.dep用来收集依赖的\n  let dep = new Dep() // 怎么讲dep和watcher关联起来呢？\n  // (默认会在渲染的时候创建一个watcher， 会将这个watcher 放在Dep全局静态属性target上)，之后执行_render\n  // 去取值， 让当前的dep记住当前的watcher\n  Object.defineProperty(target, key, {\n    get() {\n      if (Dep.target) {\n        dep.depend(); // 让这个属性的收集器记住这个watcher\n\n        if (childOb) {\n          childOb.dep.depend()\n\n          if (Array.isArray(value)) { // 如果劫持数组中还有数组的场景\n            dependArray(value)\n          }\n        }\n      }\n      // 取值的时候会执行get\n      return value\n    },\n    set(newVal) {\n      // 修改的时候会执行\n      if (newVal === value) return\n      observe(newVal)\n      value = newVal\n      dep.notify() // 通知更新\n    }\n  })\n}\n","import { observe } from \"./observe/index\";\nimport Watcher from \"./observe/watcher\";\nimport Dep from \"./observe/dep\";\nexport function initState(vm) {\n  // 获取所有选项\n  const opts = vm.$options;\n  if (opts.data) {\n    // 数据\n    initData(vm);\n  }\n  if (opts.computed) {\n    // 计算属性\n    initComputed(vm);\n  }\n}\n\nfunction initData(vm) {\n  let data = vm.$options.data; // data可能是函数或者对象\n\n  data = typeof data === \"function\" ? data.call(vm) : data;\n\n  // 下面的方法进行了属性 劫持但是在vm实例上并不会有data 属性直接访问 就是不能直接像项目里面 this.** 访问数据， 所以额外定义一个参数\n  vm._data = data; // 这样又不便于直接的操作， 所以额外设置一层 _data的代理\n  // 对数据进行劫持 vue2中采用的是一个Objec.defineProperty\n  observe(data);\n\n  // 将vm._data 用vm来代理\n  Object.keys(data).forEach((key) => proxy(vm, \"_data\", key));\n}\n\nexport function proxy(vm, target, key) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[target][key];\n    },\n    set(newVal) {\n      vm[target][key] = newVal;\n    },\n  });\n}\n\nfunction initComputed(vm) {\n  const computed = vm.$options.computed;\n  const watcher = vm._computedWatchers = {}\n  for (const key in computed) {\n    if (Object.hasOwnProperty.call(computed, key)) {\n      const useDef = computed[key];\n      \n      // 我们需要监控 计算属性中get的变化\n      const fn = typeof useDef === \"function\" ? useDef : useDef.get;\n      // 如果直接new Watcher 默认就会执行fn， 所以在options中增加一个标识lazy\n      // 将属性和watcher对应起来\n      watcher[key] = new Watcher(vm, fn, {lazy: true})\n\n      defineComputed(vm, key, useDef);\n    }\n  }\n}\n\nfunction defineComputed(target, key, useDef) {\n  const getter = typeof useDef === \"function\" ? useDef : useDef.get;\n  const setter = useDef.set || (() => {});\n  // console.log(getter, setter);\n  Object.defineProperty(target, key, {\n    get: creatComputedGetter(key),\n    set: setter,\n  });\n}\n\n// 计算属性根本不会收集依赖，只会让自己的依赖属性去收集依赖\nfunction creatComputedGetter(key) {\n  // 我们需要监测是否要执行这个getter\n  return function () {\n    const watcher = this._computedWatchers[key] // 获取对应属性的watcher\n    if (watcher.dirty) {\n      // 如果是脏的就去执行用户传入的函数\n      watcher.evaluate() // 直接掉get不合适因为存在值变化重新执行的情况\n    }\n    if (Dep.target) { // 计算属性出栈后 还要渲染watcher  我应该让计算属性watcher里面的属性也去收集上层watcher（渲染watcher）\n        watcher.depend()      \n    }\n    return watcher.value // 最后返回的是watcher上的值\n  }\n}\n","const strats = {};\n  const LIFE_CYCLE = [\"beforeCreate\", \"created\"];\n  LIFE_CYCLE.forEach((hook) => {\n    strats[hook] = function (p, c) {\n      if (c) {\n        if (p) {\n          return p.concat(c);\n        } else {\n          return [c];\n        }\n      } else {\n        return p;\n      }\n    };\n  });\nexport function mergeOptions(parent, child) {\n  const options = {}\n  for (const key in parent) {\n    mergeField(key)\n  }\n\n  for (const key in child) {\n    if (!parent.hasOwnProperty(key)) {\n      mergeField(key)\n    }\n  }\n\n  function mergeField(key) {\n    // 策略模式 避免if/else  因为mixin中可能存在多个和组件内同类型的键值的key （created，watch。。。）\n    if (strats[key]) {\n      options[key] = strats[key](parent[key], child[key])\n    } else {\n      // 优先采用儿子， 再采用父亲\n      options[key] = child[key] || parent[key]\n    }\n  }\n\n  return options\n}","import { callHook, mountComponent } from \"./lifecycle\";\nimport { compileToFunction } from \"./compiler/index\";\nimport { initState } from \"./state\";\nimport { mergeOptions } from \"./utils\";\n\nexport function initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    console.log(this); // 这里的this都是实例\n    // vm.$options就是获取用户的配置选项\n    const vm = this\n\n    // 我们定义的全局指令/过滤器 都会挂在实例上\n    vm.$options = mergeOptions(this.constructor.options,options) // 将用户的选项挂载到实例上\n    callHook(vm, 'befoerCreate')\n    // 初始化状态\n    initState(vm)\n    callHook(vm, 'created')\n    // console.log(vm.$options);\n    // 实现数据挂载\n    if (options.el) {\n      vm.$mount(options.el)\n    }\n  }\n\n  Vue.prototype.$mount = function (el) {\n    const vm = this\n    // 当前的挂载元素\n    el = document.querySelector(el)\n    let ops = vm.$options\n    if (!ops.render) { // 先看有没有写render\n      let template;\n      if (!ops.template && el) { // 没有写模板 但是写了el\n        template = el.outerHTML\n      } else {\n        if (el) {\n          template = ops.template // 如果有el 则采用模板的内容\n        }\n      }\n\n      // console.log(template);\n      // 写了template 就用写了的template\n      if (template) {\n        // 这里需要对模板进行编译\n        const render = compileToFunction(template);\n\n        ops.render = render // jsx 最终会被编译成h('xxx')\n      }\n    }\n\n    mountComponent(vm, el) // 组件的挂载\n\n    // ops.render // 最终可以获取render 方法\n\n    // script 标签引用的vue.global.js 这个编译过程是在浏览器进行的\n    // runtime 是不包含编译的， 整个编译是打包的时候通过loader来转义.vue 文件的\n    // 用runtime的时候不能在new Vue配置中使用template\n  }\n}\n\n","import { mergeOptions } from \"./utils\";\n\nexport function initGlobalAPI(Vue) {\n  // 静态属性\n  Vue.options = {};\n  \n  Vue.mixin = function (mixin) {\n    // 我们期望将用户的选项和 全局API进行合并\n    // {} {created: function(){}} => {created: [fn()]}\n\n    this.options = mergeOptions(this.options, mixin);\n\n    return this;\n  };\n}\n","import { initLifeCycle } from \"./lifecycle\"\nimport { initMixin } from \"./init\"\nimport { nextTick } from \"./observe/watcher\"\nimport { initGlobalAPI } from \"./globalApi\"\n\nfunction Vue(option) {\n  this._init(option)\n}\nVue.prototype.$nextTick = nextTick\ninitMixin(Vue)\ninitLifeCycle(Vue)\n\ninitGlobalAPI(Vue)\n\nexport default Vue"],"names":["id"],"mappings":"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"}