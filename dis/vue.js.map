{"version":3,"file":"vue.js","sources":["../src/lifecycle.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["import { creatElementVNode, creatTextVNode } from \"./vdom/index\"\r\n\r\nexport function initLifeCycle(Vue) {\r\n  Vue.prototype._update = function (node) {\r\n    console.log('update', node)\r\n  }\r\n\r\n  Vue.prototype._render = function () {\r\n    const vm = this\r\n    // console.log(vm.name)\r\n    return vm.$options.render.call(vm)\r\n  }\r\n\r\n  Vue.prototype._c = function () {\r\n    creatElementVNode()\r\n  }\r\n\r\n  Vue.prototype._v = function () {\r\n    creatTextVNode()\r\n  }\r\n\r\n  Vue.prototype._s = function (value) {\r\n    return JSON.stringify(value)\r\n  }\r\n}\r\n\r\nfunction creatEle() {\r\n  \r\n}\r\n\r\n\r\n// Vue的核心流程 1) 创造了响应式数据 2) 模板转换成ast语法树 3) 将ast语法树转换成render函数 \r\n// 4) 后续每次数据更新可以只执行render 函数(无需再次执行ast转换的过程)\r\n\r\n// render 函数会产生虚拟节点(使用响应式数据)\r\n// 根据生成的虚拟节点生成真实DOM\r\nexport function mountComponent(vm, el) {\r\n  // console.log(vm)\r\n\r\n  // 1、调用render方法产生虚拟节点, 虚拟DOM\r\n  vm._update(vm._render()) // vm._render()其实就是执行的 vm.render()\r\n  // 2、根据虚拟DOM产生真实DOM\r\n\r\n  // 3、插入到el元素中\r\n  \r\n}\r\n\r\n\r\n","\r\n// Regular Expressions for parsing tags and attributes\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 他匹配到的分组是一个标签名 <xxx 匹配到的是开始 标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)  // 匹配的是</xxx> 最终匹配到的分组就是结束标签的名字\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/  // 匹配属性\r\n// 属性的第一个分组就是属性的key value 就是分组3/分组4/分组5\r\nconst startTagClose = /^\\s*(\\/?)>/ // <div> <br/> 自闭合标签等\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // 匹配到的内容就是我们表达式的变量\r\nconst dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+?\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\nconst doctype = /^<!DOCTYPE [^>]+>/i\r\n// #7298: escape - to avoid being passed as HTML comment when inlined in page\r\nconst comment = /^<!\\--/\r\nconst conditionalComment = /^<!\\[/\r\n\r\nexport function parseHTML(html) { // html 最开始肯定是一个<  \r\n  // 每次解析完一个 标签/属性 等就删除掉\r\n  function advance(length) {\r\n    html = html.substring(length)\r\n  }\r\n\r\n  const ELEMENT_TYPE = 1\r\n  const TEXT_TYPE = 3\r\n  const stack = [] // 用于存放元素栈\r\n  let currentParent // 指向栈中的最后一个\r\n  let root\r\n\r\n  // 最终需要转换成一颗抽象语法树\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag,\r\n      attrs,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      parent: null\r\n    }\r\n  }\r\n\r\n  function start(tag, attrs) {\r\n    let node = createASTElement(tag, attrs) // 创建一个ast节点\r\n    if (!root) { // 看一下是否是空树\r\n      root = node // 如果是空树则当前是树的根节点\r\n    }\r\n\r\n    if (currentParent) {\r\n      node.parent = currentParent // 赋予了parent 属性\r\n      currentParent.children.push(node) // 当前节点children增加\r\n    }\r\n    stack.push(node)\r\n    currentParent = node // currentParent 是栈中的最后一个\r\n  }\r\n\r\n  function charts(text) {\r\n    // console.log(text); // 文本直接放在当前指向的节点中\r\n    text = text.replace(/\\s/g, '')\r\n    text && currentParent.children.push({\r\n    // currentParent.children.push({\r\n      type: TEXT_TYPE,\r\n      text,\r\n      parent: currentParent\r\n    })\r\n  }\r\n\r\n  function end(tags) {\r\n    // console.log(tags); // 遇到结束标签必然是stack中最后一个元素（即当前元素）的结束\r\n    stack.pop()\r\n    currentParent = stack[stack.length - 1]\r\n  }\r\n\r\n  function parsetStartTag() {\r\n    const start = html.match(startTagOpen)\r\n\r\n    // console.log(start);\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1], // 标签名\r\n        attrs: []\r\n      }\r\n      advance(start[0].length)\r\n      // 如果不是开始标签的结束就一直匹配下去\r\n      let attr, end;\r\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        advance(attr[0].length)\r\n        match.attrs.push({name: attr[1], value: attr[3] || attr[4] || attr[5] || true})\r\n      }\r\n\r\n      if (end) {\r\n        advance(end[0].length)\r\n      }\r\n      // console.log(match);\r\n      return match\r\n    }\r\n    return false\r\n  }\r\n\r\n  while (html) {\r\n    // 如果textEnd 为0 说明是一个开始标签或者结束标签\r\n    // 如果textEnd > 0 说明是文本的结束位置\r\n    let textEnd = html.indexOf('<'); // 如果indexOf中的索引是0 则说明是个标签\r\n\r\n    if (textEnd == 0) {\r\n      const startTagMatch = parsetStartTag();\r\n      if (startTagMatch) {\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue;\r\n      }\r\n      // 匹配结束标签\r\n      let endTagMatch = html.match(endTag)\r\n      if (endTagMatch) {\r\n        end(endTagMatch[1])\r\n        advance(endTagMatch[0].length)\r\n        continue;\r\n      }\r\n    }\r\n    // 文本\r\n    if (textEnd > 0) {\r\n      let text = html.substring(0, textEnd); // 文本内容\r\n      if (text) {\r\n        charts(text)\r\n        advance(text.length)\r\n      }\r\n    }\r\n  }\r\n  // console.log(root);\r\n\r\n  return root\r\n}\r\n","import { parseHTML } from \"./parse\"\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // 匹配到的内容就是我们表达式的变量\r\n// vue3 采用的不是使用正则\r\n// 对模板进行编译处理\r\n// function parseHTML\r\n// 对模板进行编译处理\r\nexport function compileToFunction(template) {\r\n\r\n  // 1 将template 转换成ast 语法树\r\n  let ast = parseHTML(template)\r\n  // console.log(ast);\r\n  // console.log(ast);\r\n  // 2 生成render 方法（render 方法执行后的返回的结果就是虚拟dom）\r\n  /* \r\n    _c: creatElement()\r\n    _v: 创建vnode\r\n    _s: 字符串\r\n    render() {\r\n      return _c('div', {id: 'app'}, _c('div', {style: {color: 'red'}}, _v(_s(name) + 'hello'),\r\n      _c('span', undefind, _v(_s(age)))))\r\n    }\r\n  */\r\n\r\n  // 模板引擎的实现原理就是 with + new Function()\r\n  let code = codegen(ast)\r\n  console.log(code)\r\n  code = `with(this){return ${code}}` // with 语句改变作用域范围(改变取值)\r\n  let render = new Function(code) // 根据代码生成函数\r\n  // console.log(render.toString());\r\n  return render\r\n}\r\n\r\nfunction genProps(attrs) {\r\n  let str = '' // name value\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i]\r\n    if (attr.name === 'style') {\r\n      // color: red; background: yellow => { color: 'red' }\r\n      let obj = {}\r\n      attr.value.split(';').forEach(item => {\r\n        let [key, value] = item.split(':')\r\n        obj[key] = value\r\n      });\r\n      attr.value = obj\r\n    }\r\n\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},` // a: b, c: d,\r\n  }\r\n  return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nfunction genChildren(ast) {\r\n  const children = ast.children;\r\n  if (children) {\r\n    return children.map(child => genChild(child)).join(',')\r\n  } else {\r\n    return ''\r\n  }\r\n}\r\n\r\nfunction genChild(node) {\r\n  if (node.type === 1) { // \r\n    return codegen(node)\r\n  } else {\r\n    // 文本\r\n    let text = node.text\r\n    if (!defaultTagRE.test(text)) {\r\n      return `_v(${JSON.stringify(text)})`\r\n    } else {\r\n      // _v( _s(name) + 'hello' + _s(name))\r\n      let tokens = []\r\n      let match;\r\n      defaultTagRE.lastIndex = 0 // exec 使用的时候 正则中存在 /g 的话会记录位置的所以需要重置\r\n      let lastIndex = 0\r\n      while(match = defaultTagRE.exec(text)) {\r\n        // console.log(match, '----');\r\n        let index = match.index\r\n        if (index > lastIndex) {\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n        }\r\n\r\n        tokens.push(`_s(${match[1].trim()})`)\r\n        lastIndex = index + match[0].length\r\n      }\r\n      if (lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n      }\r\n      return `_v(${tokens.join('+')})`\r\n    }\r\n  }\r\n}\r\n\r\nfunction codegen(ast) {\r\n  // console.log(ast);\r\n  let children = genChildren(ast)\r\n  let code = (`_c('${ast.tag}', ${\r\n      ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\r\n    }${\r\n      ast.children.length ? `,${children}` : ''\r\n    }\r\n  )`)\r\n  \r\n  return code \r\n}","// 我们希望重写数组中的部分方法\r\n\r\nlet oldArrayProto = Array.prototype // 获取数组的原型\r\n \r\n// 通过 newArrayProto.__proto__ = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto) // 生成新的(不是拷贝， 是复制)\r\n\r\nlet methods = [\r\n  'push',\r\n  'pop',\r\n  'shift',\r\n  'unshift',\r\n  'reverse',\r\n  'sort',\r\n  'splice'\r\n]\r\n\r\nmethods.forEach(method => {\r\n  newArrayProto[method] = function(...args) { // 这里重写了数组的方法\r\n    const result = oldArrayProto[method].call(this, ...args) // 内部调用原来的方法， 函数的劫持， 切片编程\r\n    console.log('method', method);\r\n    // 但是对数组进行追加额外的对象数据需要再次进行劫持\r\n    let inserted;\r\n    let ob = this.__ob__;\r\n    switch (method) {\r\n      // 需要对新增的数据再次进行劫持\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n        break;\r\n      case 'splice': \r\n        // arr.splice(0, 1, {a: 1}, {b: 2})\r\n        // args 是个数组，只截取新增的数据即可\r\n        inserted = args.slice(2)\r\n        break\r\n      default:\r\n        break;\r\n    }\r\n    console.log(inserted);\r\n    // 对新增的内容再次进行观测 inserted 是个数组哦\r\n    // 是不是想调用observeArray(data) 就可以了， 但是访问不到🐶。。。, 只能通过额外挂载参数的方法\r\n    if (inserted) {\r\n      // 这里的this 不就是外部的data吗，因为外部是data调用的啊，\r\n      // 所以只能在外部的class Observer 中给data加上一个属性这里就能访问到observeArray(）了\r\n      // console.log(this);\r\n      ob.observeArray(inserted)\r\n    }\r\n    return result\r\n  }\r\n})\r\n","import { newArrayProto } from \"./array\";\r\n\r\nexport function observe(data) {\r\n  // 劫持数据\r\n  // console.log(data);\r\n\r\n  // 只对对象进行劫持\r\n  if (typeof data !== 'object' || data === null) return\r\n\r\n  // 说明这个对象被代理过了\r\n  if (data.__ob__ instanceof Observer) {\r\n    return data.__ob__;\r\n  } \r\n  // 如果一个对象被劫持过了， 那就不需要劫持了（要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过）\r\n  return new Observer(data)\r\n  \r\n}\r\nclass Observer {\r\n  constructor(data) {\r\n    // object.definerProperty 只能劫持已经存在的数据，新增的和删除的并不能感知。\r\n    // vue2 里面会为此单独设置$set $delete\r\n    // data.__ob__ = this // 给数据加了一个标识，如果数据上有__ob__则说明这个属性被观测过\r\n    // (但是直接放在这里会栈内存溢出，因为下面还有walk函数循环， 下面有个observe递归)\r\n    // 所以将__ob__ 转换成不可枚举\r\n    Object.defineProperty(data, '__ob__', {\r\n      value: this,\r\n      enumerable: false // 将__ob__转换为不可枚举（循环的时候无法获取）\r\n    })\r\n\r\n    // 但是针对data中的数组数据每一项都添加get(), set() 性能太差了， 且不能监听到数组的push, pop 等方法\r\n    if (Array.isArray(data)) {\r\n      // 所以在这里我们重写数组中的方法 七个变异方法是可以修改数组本身的\r\n      data.__proto__ = newArrayProto\r\n      this.observeArray(data) // 如果数组中放的是对象的时候\r\n    } else {\r\n      this.walk(data)\r\n    }\r\n  }\r\n\r\n  walk(data) {\r\n    // 循环对象 对属性依次劫持\r\n    // 重写定义属性 性能差\r\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n  }\r\n\r\n  observeArray(data) { // 观测数组中的对象数据\r\n    data.forEach(item => observe(item))\r\n  }\r\n}\r\n\r\nexport function defineReactive(target, key, value) { // 闭包 属性劫持\r\n  observe(value)  // 递归， 比如data中的属性还是一个对象的场景\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      // 取值的时候会执行get\r\n      return value\r\n    },\r\n    set(newVal) {\r\n      // 修改的时候会执行\r\n      if (newVal === value) return\r\n      value = newVal\r\n    }\r\n  })\r\n}\r\n","import { observe } from \"./observe/index\"\r\n\r\nexport function initState(vm) {\r\n  // 获取所有选项\r\n  const opts = vm.$options\r\n\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data // data可能是函数或者对象\r\n\r\n  data = typeof data === 'function' ? data.call(vm) : data\r\n\r\n  // 下面的方法进行了属性 劫持但是在vm实例上并不会有data 属性直接访问 就是不能直接像项目里面 this.** 访问数据， 所以额外定义一个参数\r\n  vm._data = data // 这样又不便于直接的操作， 所以额外设置一层 _data的代理\r\n  // 对数据进行劫持 vue2中采用的是一个Objec.defineProperty\r\n  observe(data)\r\n\r\n  // 将vm._data 用vm来代理\r\n  Object.keys(data).forEach(key => proxy(vm, '_data', key))\r\n}\r\n\r\nexport function proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[target][key]\r\n    },\r\n    set(newVal) {\r\n      vm[target][key] = newVal\r\n    }\r\n  })\r\n}\r\n","import { mountComponent } from \"./lifecycle\";\r\nimport { compileToFunction } from \"./compiler/index\";\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    console.log(this); // 这里的this都是实例\r\n    // vm.$options就是获取用户的配置选项\r\n    const vm = this\r\n    vm.$options = options // 将用户的选项挂载到实例上\r\n    // 初始化状态\r\n    initState(vm)\r\n\r\n    // 实现数据挂载\r\n    if (options.el) {\r\n      vm.$mount(options.el)\r\n    }\r\n  }\r\n\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this\r\n    // 当前的挂载元素\r\n    el = document.querySelector(el)\r\n    let ops = vm.$options\r\n    if (!ops.render) { // 先看有没有写render\r\n      let template;\r\n      if (!ops.template && el) { // 没有写模板 但是写了el\r\n        template = el.outerHTML\r\n      } else {\r\n        if (el) {\r\n          template = ops.template // 如果有el 则采用模板的内容\r\n        }\r\n      }\r\n\r\n      // console.log(template);\r\n      // 写了template 就用写了的template\r\n      if (template) {\r\n        // 这里需要对模板进行编译\r\n        const render = compileToFunction(template);\r\n\r\n        ops.render = render // jsx 最终会被编译成h('xxx')\r\n      }\r\n    }\r\n\r\n    mountComponent(vm, el) // 组件的挂载\r\n\r\n    // ops.render // 最终可以获取render 方法\r\n\r\n    // script 标签引用的vue.global.js 这个编译过程是在浏览器进行的\r\n    // runtime 是不包含编译的， 整个编译是打包的时候通过loader来转义.vue 文件的\r\n    // 用runtime的时候不能在new Vue配置中使用template\r\n  }\r\n}\r\n\r\n","import { initLifeCycle } from \"./lifecycle\"\r\nimport { initMixin } from \"./init\"\r\n\r\nfunction Vue(option) {\r\n  this._init(option)\r\n}\r\n\r\ninitMixin(Vue)\r\ninitLifeCycle(Vue)\r\n\r\nexport default Vue"],"names":[],"mappings":";;;;;;EAEO,SAAS,aAAa,CAAC,GAAG,EAAE;EACnC,EAAE,GAAG,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE;EAC1C,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,EAAC;EAC/B,IAAG;AACH;EACA,EAAE,GAAG,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;EACtC,IAAI,MAAM,EAAE,GAAG,KAAI;EACnB;EACA,IAAI,OAAO,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;EACtC,IAAG;AACH;EACA,EAAE,GAAG,CAAC,SAAS,CAAC,EAAE,GAAG,YAAY;EAEjC,IAAG;AACH;EACA,EAAE,GAAG,CAAC,SAAS,CAAC,EAAE,GAAG,YAAY;EAEjC,IAAG;AACH;EACA,EAAE,GAAG,CAAC,SAAS,CAAC,EAAE,GAAG,UAAU,KAAK,EAAE;EACtC,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;EAChC,IAAG;EACH,CAAC;AAKD;AACA;EACA;EACA;AACA;EACA;EACA;EACO,SAAS,cAAc,CAAC,EAAE,EAAE,EAAE,EAAE;EACvC;AACA;EACA;EACA,EAAE,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,EAAC;EAC1B;AACA;EACA;EACA;EACA;;EC5CA;EACA,MAAM,MAAM,GAAG,CAAC,4BAA4B,EAAC;EAC7C,MAAM,YAAY,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,EAAC;EACnD,MAAM,YAAY,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC,EAAC;EACpD,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAC,EAAC;EACvD,MAAM,SAAS,GAAG,4EAA2E;EAC7F;EACA,MAAM,aAAa,GAAG,aAAY;AAOlC;EACO,SAAS,SAAS,CAAC,IAAI,EAAE;EAChC;EACA,EAAE,SAAS,OAAO,CAAC,MAAM,EAAE;EAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAC;EACjC,GAAG;AACH;EACA,EAAE,MAAM,YAAY,GAAG,EAAC;EACxB,EAAE,MAAM,SAAS,GAAG,EAAC;EACrB,EAAE,MAAM,KAAK,GAAG,GAAE;EAClB,EAAE,IAAI,cAAa;EACnB,EAAE,IAAI,KAAI;AACV;EACA;EACA,EAAE,SAAS,gBAAgB,CAAC,GAAG,EAAE,KAAK,EAAE;EACxC,IAAI,OAAO;EACX,MAAM,GAAG;EACT,MAAM,KAAK;EACX,MAAM,IAAI,EAAE,YAAY;EACxB,MAAM,QAAQ,EAAE,EAAE;EAClB,MAAM,MAAM,EAAE,IAAI;EAClB,KAAK;EACL,GAAG;AACH;EACA,EAAE,SAAS,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE;EAC7B,IAAI,IAAI,IAAI,GAAG,gBAAgB,CAAC,GAAG,EAAE,KAAK,EAAC;EAC3C,IAAI,IAAI,CAAC,IAAI,EAAE;EACf,MAAM,IAAI,GAAG,KAAI;EACjB,KAAK;AACL;EACA,IAAI,IAAI,aAAa,EAAE;EACvB,MAAM,IAAI,CAAC,MAAM,GAAG,cAAa;EACjC,MAAM,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAC;EACvC,KAAK;EACL,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,EAAC;EACpB,IAAI,aAAa,GAAG,KAAI;EACxB,GAAG;AACH;EACA,EAAE,SAAS,MAAM,CAAC,IAAI,EAAE;EACxB;EACA,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,EAAC;EAClC,IAAI,IAAI,IAAI,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC;EACxC;EACA,MAAM,IAAI,EAAE,SAAS;EACrB,MAAM,IAAI;EACV,MAAM,MAAM,EAAE,aAAa;EAC3B,KAAK,EAAC;EACN,GAAG;AACH;EACA,EAAE,SAAS,GAAG,CAAC,IAAI,EAAE;EACrB;EACA,IAAI,KAAK,CAAC,GAAG,GAAE;EACf,IAAI,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;EAC3C,GAAG;AACH;EACA,EAAE,SAAS,cAAc,GAAG;EAC5B,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAC;AAC1C;EACA;EACA,IAAI,IAAI,KAAK,EAAE;EACf,MAAM,MAAM,KAAK,GAAG;EACpB,QAAQ,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;EACzB,QAAQ,KAAK,EAAE,EAAE;EACjB,QAAO;EACP,MAAM,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAC;EAC9B;EACA,MAAM,IAAI,IAAI,EAAE,GAAG,CAAC;EACpB,MAAM,OAAO,EAAE,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,KAAK,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE;EACnF,QAAQ,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAC;EAC/B,QAAQ,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAC;EACvF,OAAO;AACP;EACA,MAAM,IAAI,GAAG,EAAE;EACf,QAAQ,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,EAAC;EAC9B,OAAO;EACP;EACA,MAAM,OAAO,KAAK;EAClB,KAAK;EACL,IAAI,OAAO,KAAK;EAChB,GAAG;AACH;EACA,EAAE,OAAO,IAAI,EAAE;EACf;EACA;EACA,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACpC;EACA,IAAI,IAAI,OAAO,IAAI,CAAC,EAAE;EACtB,MAAM,MAAM,aAAa,GAAG,cAAc,EAAE,CAAC;EAC7C,MAAM,IAAI,aAAa,EAAE;EACzB,QAAQ,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,aAAa,CAAC,KAAK,EAAC;EACzD,QAAQ,SAAS;EACjB,OAAO;EACP;EACA,MAAM,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAC;EAC1C,MAAM,IAAI,WAAW,EAAE;EACvB,QAAQ,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,EAAC;EAC3B,QAAQ,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,EAAC;EACtC,QAAQ,SAAS;EACjB,OAAO;EACP,KAAK;EACL;EACA,IAAI,IAAI,OAAO,GAAG,CAAC,EAAE;EACrB,MAAM,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;EAC5C,MAAM,IAAI,IAAI,EAAE;EAChB,QAAQ,MAAM,CAAC,IAAI,EAAC;EACpB,QAAQ,OAAO,CAAC,IAAI,CAAC,MAAM,EAAC;EAC5B,OAAO;EACP,KAAK;EACL,GAAG;EACH;AACA;EACA,EAAE,OAAO,IAAI;EACb;;EC9HA,MAAM,YAAY,GAAG,2BAA0B;EAC/C;EACA;EACA;EACA;EACO,SAAS,iBAAiB,CAAC,QAAQ,EAAE;AAC5C;EACA;EACA,EAAE,IAAI,GAAG,GAAG,SAAS,CAAC,QAAQ,EAAC;EAC/B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA,EAAE,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,EAAC;EACzB,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,EAAC;EACnB,EAAE,IAAI,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC,EAAC;EACrC,EAAE,IAAI,MAAM,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAC;EACjC;EACA,EAAE,OAAO,MAAM;EACf,CAAC;AACD;EACA,SAAS,QAAQ,CAAC,KAAK,EAAE;EACzB,EAAE,IAAI,GAAG,GAAG,GAAE;EACd,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACzC,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,EAAC;EACvB,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;EAC/B;EACA,MAAM,IAAI,GAAG,GAAG,GAAE;EAClB,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,IAAI;EAC5C,QAAQ,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAC;EAC1C,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,MAAK;EACxB,OAAO,CAAC,CAAC;EACT,MAAM,IAAI,CAAC,KAAK,GAAG,IAAG;EACtB,KAAK;AACL;EACA,IAAI,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC;EACxD,GAAG;EACH,EAAE,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;AACD;EACA,SAAS,WAAW,CAAC,GAAG,EAAE;EAC1B,EAAE,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;EAChC,EAAE,IAAI,QAAQ,EAAE;EAChB,IAAI,OAAO,QAAQ,CAAC,GAAG,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;EAC3D,GAAG,MAAM;EACT,IAAI,OAAO,EAAE;EACb,GAAG;EACH,CAAC;AACD;EACA,SAAS,QAAQ,CAAC,IAAI,EAAE;EACxB,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;EACvB,IAAI,OAAO,OAAO,CAAC,IAAI,CAAC;EACxB,GAAG,MAAM;EACT;EACA,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,KAAI;EACxB,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;EAClC,MAAM,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1C,KAAK,MAAM;EACX;EACA,MAAM,IAAI,MAAM,GAAG,GAAE;EACrB,MAAM,IAAI,KAAK,CAAC;EAChB,MAAM,YAAY,CAAC,SAAS,GAAG,EAAC;EAChC,MAAM,IAAI,SAAS,GAAG,EAAC;EACvB,MAAM,MAAM,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;EAC7C;EACA,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,MAAK;EAC/B,QAAQ,IAAI,KAAK,GAAG,SAAS,EAAE;EAC/B,UAAU,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,EAAC;EACnE,SAAS;AACT;EACA,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAC;EAC7C,QAAQ,SAAS,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAM;EAC3C,OAAO;EACP,MAAM,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,EAAE;EACnC,QAAQ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAC;EAC1D,OAAO;EACP,MAAM,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACtC,KAAK;EACL,GAAG;EACH,CAAC;AACD;EACA,SAAS,OAAO,CAAC,GAAG,EAAE;EACtB;EACA,EAAE,IAAI,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAC;EACjC,EAAE,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG;AAChC,MAAM,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM;AACzD,KAAK;AACL,MAAM,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,EAAE;AAC/C,KAAK;AACL,GAAG,CAAC,EAAC;EACL;EACA,EAAE,OAAO,IAAI;EACb;;ECvGA;AACA;EACA,IAAI,aAAa,GAAG,KAAK,CAAC,UAAS;EACnC;EACA;EACO,IAAI,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,EAAC;AACvD;EACA,IAAI,OAAO,GAAG;EACd,EAAE,MAAM;EACR,EAAE,KAAK;EACP,EAAE,OAAO;EACT,EAAE,SAAS;EACX,EAAE,SAAS;EACX,EAAE,MAAM;EACR,EAAE,QAAQ;EACV,EAAC;AACD;EACA,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI;EAC1B,EAAE,aAAa,CAAC,MAAM,CAAC,GAAG,SAAS,GAAG,IAAI,EAAE;EAC5C,IAAI,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,EAAC;EAC5D,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;EAClC;EACA,IAAI,IAAI,QAAQ,CAAC;EACjB,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;EACzB,IAAI,QAAQ,MAAM;EAClB;EACA,MAAM,KAAK,MAAM,CAAC;EAClB,MAAM,KAAK,SAAS;EACpB,QAAQ,QAAQ,GAAG,KAAI;EACvB,QAAQ,MAAM;EACd,MAAM,KAAK,QAAQ;EACnB;EACA;EACA,QAAQ,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC;EAChC,QAAQ,KAAK;EAGb,KAAK;EACL,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;EAC1B;EACA;EACA,IAAI,IAAI,QAAQ,EAAE;EAClB;EACA;EACA;EACA,MAAM,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAC;EAC/B,KAAK;EACL,IAAI,OAAO,MAAM;EACjB,IAAG;EACH,CAAC;;EC/CM,SAAS,OAAO,CAAC,IAAI,EAAE;EAC9B;EACA;AACA;EACA;EACA,EAAE,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,IAAI,EAAE,MAAM;AACvD;EACA;EACA,EAAE,IAAI,IAAI,CAAC,MAAM,YAAY,QAAQ,EAAE;EACvC,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC;EACvB,GAAG;EACH;EACA,EAAE,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC;EAC3B;EACA,CAAC;EACD,MAAM,QAAQ,CAAC;EACf,EAAE,WAAW,CAAC,IAAI,EAAE;EACpB;EACA;EACA;EACA;EACA;EACA,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE;EAC1C,MAAM,KAAK,EAAE,IAAI;EACjB,MAAM,UAAU,EAAE,KAAK;EACvB,KAAK,EAAC;AACN;EACA;EACA,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;EAC7B;EACA,MAAM,IAAI,CAAC,SAAS,GAAG,cAAa;EACpC,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,EAAC;EAC7B,KAAK,MAAM;EACX,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC;EACrB,KAAK;EACL,GAAG;AACH;EACA,EAAE,IAAI,CAAC,IAAI,EAAE;EACb;EACA;EACA,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;EAC1E,GAAG;AACH;EACA,EAAE,YAAY,CAAC,IAAI,EAAE;EACrB,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,EAAC;EACvC,GAAG;EACH,CAAC;AACD;EACO,SAAS,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE;EACnD,EAAE,OAAO,CAAC,KAAK,EAAC;EAChB,EAAE,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE;EACrC,IAAI,GAAG,GAAG;EACV;EACA,MAAM,OAAO,KAAK;EAClB,KAAK;EACL,IAAI,GAAG,CAAC,MAAM,EAAE;EAChB;EACA,MAAM,IAAI,MAAM,KAAK,KAAK,EAAE,MAAM;EAClC,MAAM,KAAK,GAAG,OAAM;EACpB,KAAK;EACL,GAAG,EAAC;EACJ;;EC7DO,SAAS,SAAS,CAAC,EAAE,EAAE;EAC9B;EACA,EAAE,MAAM,IAAI,GAAG,EAAE,CAAC,SAAQ;AAC1B;EACA,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;EACjB,IAAI,QAAQ,CAAC,EAAE,EAAC;EAChB,GAAG;AACH;EACA,CAAC;AACD;EACA,SAAS,QAAQ,CAAC,EAAE,EAAE;EACtB,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAI;AAC7B;EACA,EAAE,IAAI,GAAG,OAAO,IAAI,KAAK,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,KAAI;AAC1D;EACA;EACA,EAAE,EAAE,CAAC,KAAK,GAAG,KAAI;EACjB;EACA,EAAE,OAAO,CAAC,IAAI,EAAC;AACf;EACA;EACA,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI,KAAK,CAAC,EAAE,EAAE,OAAO,EAAE,GAAG,CAAC,EAAC;EAC3D,CAAC;AACD;EACO,SAAS,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE;EACvC,EAAE,MAAM,CAAC,cAAc,CAAC,EAAE,EAAE,GAAG,EAAE;EACjC,IAAI,GAAG,GAAG;EACV,MAAM,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC;EAC5B,KAAK;EACL,IAAI,GAAG,CAAC,MAAM,EAAE;EAChB,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,OAAM;EAC9B,KAAK;EACL,GAAG,EAAC;EACJ;;EC/BO,SAAS,SAAS,CAAC,GAAG,EAAE;EAC/B,EAAE,GAAG,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,OAAO,EAAE;EAC3C,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;EACtB;EACA,IAAI,MAAM,EAAE,GAAG,KAAI;EACnB,IAAI,EAAE,CAAC,QAAQ,GAAG,QAAO;EACzB;EACA,IAAI,SAAS,CAAC,EAAE,EAAC;AACjB;EACA;EACA,IAAI,IAAI,OAAO,CAAC,EAAE,EAAE;EACpB,MAAM,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAC;EAC3B,KAAK;EACL,IAAG;AACH;EACA,EAAE,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,EAAE,EAAE;EACvC,IAAI,MAAM,EAAE,GAAG,KAAI;EACnB;EACA,IAAI,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,EAAE,EAAC;EACnC,IAAI,IAAI,GAAG,GAAG,EAAE,CAAC,SAAQ;EACzB,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;EACrB,MAAM,IAAI,QAAQ,CAAC;EACnB,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,EAAE,EAAE;EAC/B,QAAQ,QAAQ,GAAG,EAAE,CAAC,UAAS;EAC/B,OAAO,MAAM;EACb,QAAQ,IAAI,EAAE,EAAE;EAChB,UAAU,QAAQ,GAAG,GAAG,CAAC,SAAQ;EACjC,SAAS;EACT,OAAO;AACP;EACA;EACA;EACA,MAAM,IAAI,QAAQ,EAAE;EACpB;EACA,QAAQ,MAAM,MAAM,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;AACnD;EACA,QAAQ,GAAG,CAAC,MAAM,GAAG,OAAM;EAC3B,OAAO;EACP,KAAK;AACL;EACA,IAAI,cAAc,CAAC,EAAM,EAAC;AAC1B;EACA;AACA;EACA;EACA;EACA;EACA,IAAG;EACH;;ECjDA,SAAS,GAAG,CAAC,MAAM,EAAE;EACrB,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAC;EACpB,CAAC;AACD;EACA,SAAS,CAAC,GAAG,EAAC;EACd,aAAa,CAAC,GAAG;;;;;;;;"}